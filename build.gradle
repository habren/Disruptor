apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'idea'

group 'com.jasongj.disruptor'
version '1.0'


sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    scalaVersion = "2.11.8"
    log4j2Version = '2.7'
    disruptorVersion = '3.4.2'
}

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//    maven { url "http://repo.maven.apache.org/maven2/" }
//    maven { url "http://repo1.maven.org/maven2/" }
//    maven { url "http://repo2.maven.org/maven2/" }
//    maven { url "http://central.maven.org/maven2/" }
//    maven { url "http://maven.wso2.org/nexus/content/groups/public/" }
//    maven { url "http://maven.net.cn/content/groups/public/" }
    mavenCentral()
}

configurations {
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name
        }
    }
    compile.extendsFrom provided

    all*.exclude group: 'ch.qos.logback'
    all*.exclude module: 'slf4j-log4j12'
    all*.exclude group: 'org.pentaho'
    all*.exclude module: 'apache-curator'
    all*.exclude group: 'org.eclipse.jetty.aggregate'
    all*.exclude group: 'org.eclipse.jetty.orbit'
//    all*.exclude group: 'com.sun.jersey.contribs'
//    all*.exclude group: 'com.sun.jersey'
}

dependencies {

    compile (
            [group: 'org.scala-lang', name: 'scala-actors', version: scalaVersion],
            [group: 'org.scala-lang', name: 'scala-compiler', version: scalaVersion],
            [group: 'org.scala-lang', name: 'scala-reflect', version: scalaVersion],
            [group: 'commons-cli', name: 'commons-cli', version:'1.3.1'],
            [group: 'org.projectlombok', name: 'lombok', version:'1.16.12'],
            [group: 'org.slf4j', name: 'slf4j-api', version:'1.7.22'],
            [group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2Version],
            [group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2Version],
            [group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2Version],
            [group: 'org.apache.logging.log4j', name: 'log4j-web', version: log4j2Version],
            [group: 'com.lmax', name: 'disruptor', version: disruptorVersion]
    )

    provided (
            [group: 'org.testng', name: 'testng', version: '6.14.2'],
            [group: 'junit', name: 'junit', version: '4.11']

    )


    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar {
    manifest {
    }

    baseName = project.name + '-with-dependencies'
    zip64 = true
    from {
        (configurations.compile - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala']
        }
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }

    test {
        scala {
            srcDirs = ['src/test/scala']
        }
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }

    targetVersion = "15"
}

task listJars(description: 'Display all compile jars.') {
    doLast{
        (configurations.compile ).each { File file -> println file.name }
    }
}

